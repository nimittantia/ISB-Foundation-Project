# -*- coding: utf-8 -*-
"""Streamlit_app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_tHy3e3cOQ0fBHnvIMXmvS29YY3pG4GB
"""

!pip install streamlit
import streamlit as st
import pandas as pd
import requests
import json
import time
from io import BytesIO

# --- Constants ---
EIA_API_URL = "https://api.eia.gov/v2/petroleum/pri/spt/data/"
PRODUCTS = ["EPCBRENT", "EPCWTI"]

# --- Streamlit UI ---
st.title("Oil Prices Data Explorer")

api_key = st.text_input("Enter your EIA API Key", type="password")

start_date = st.date_input("Start Date", value=pd.to_datetime("1986-01-03"))
end_date = st.date_input("End Date", value=pd.to_datetime("2024-12-31"))
selected_products = st.multiselect("Select Product(s)", PRODUCTS, default=PRODUCTS)

if st.button("Fetch Oil Price Data") and api_key:
    with st.spinner("Fetching data..."):
        all_records = []
        offset = 0
        while True:
            params = {
                "frequency": "daily",
                "data": ["value"],
                "facets": {"product": selected_products},
                "start": str(start_date),
                "end": str(end_date),
                "sort": [{"column": "period", "direction": "asc"}],
                "length": 5000,
                "offset": offset
            }

            headers = {
                "Accept": "application/json",
                "X-Params": json.dumps(params)
            }

            response = requests.get(EIA_API_URL, headers=headers, params={"api_key": api_key})
            if response.status_code == 200:
                data = response.json()
                records = data.get("response", {}).get("data", [])
                if not records:
                    break
                all_records.extend(records)
                offset += 5000
                time.sleep(1)
            else:
                st.error(f"Error fetching data: {response.status_code}")
                break

        if all_records:
            df = pd.DataFrame(all_records)
            st.success("Data fetched successfully!")
            st.dataframe(df)

            csv = df.to_csv(index=False).encode('utf-8')
            st.download_button("Download CSV", csv, "oil_prices.csv", "text/csv")

            # Plotting
            df['period'] = pd.to_datetime(df['period'])
            df['value'] = pd.to_numeric(df['value'], errors='coerce')
            st.line_chart(df.pivot(index='period', columns='product', values='value'))
        else:
            st.warning("No data returned.")

else:
    st.info("Enter API key and click 'Fetch Oil Price Data' to begin.")

